name: Release Build

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'

  pull_request:
    branches:
      - main

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest]
        compiler: [ {cpp: g++, c: gcc}, {cpp: clang++, c: clang}, {cpp: cl, c: cl} ]

        exclude:
          - os: ubuntu-latest
            compiler: {cpp: cl, c: cl}

#          - os: macos-latest
#            compiler: {cpp: cl, c: cl}


    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
    
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: |
        sudo apt install -y xorg-dev libasound2-dev

    - name: Detect compilers
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        echo g++ info:
        g++ --version
        which g++
        echo clang++ info:
        clang++ --version
        which clang++
        echo ninja info:
        ninja --version
        which ninja

    - name: Configure CMake
      run: >
        cmake -G Ninja -B '${{ steps.strings.outputs.build-output-dir }}'
        -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cpp }}
        -DCMAKE_C_COMPILER=${{ matrix.compiler.c }}
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -S '${{ github.workspace }}'

    - name: Build
      run: |
        cmake --build '${{ steps.strings.outputs.build-output-dir }}' --config ${{env.BUILD_TYPE}}
